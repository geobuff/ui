{
  // Place your geobuff workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "ReactTypeScriptComponent": {
    "prefix": ["react-fc", "fc"],
    "body": [
      "import React, { FC } from 'react';",
      "import { Box } from '@chakra-ui/react';",
      "",
      "export interface Props {",
      "}",
      "",
      "const ${1:${TM_FILENAME_BASE}}: FC<Props> = () => {",
      "\treturn (",
      "\t\t<Box>{\"I'm a ðŸ“¦\"}</Box>",
      "\t)",
      "};",
      "",
      "export default ${1:${TM_FILENAME_BASE}};"
    ],
    "description": "Creates a React TypeScript Functional Component"
  },
  "StorybookComponentStoryFormat": {
    "prefix": "story",
    "body": [
      "import { Story } from '@storybook/react';",
      "import ${TM_FILENAME/^([^.]+).*/$1/}, { Props } from './${TM_FILENAME/^([^.]+).*/$1/}';",
      "",
      "export default {",
      "\ttitle: 'UI/${TM_FILENAME/^([^.]+).*/$1/}',",
      "\tcomponent: ${TM_FILENAME/^([^.]+).*/$1/},",
      "};",
      "",
      "const Template: Story<Props> = (args) => (",
      "\t<${TM_FILENAME/^([^.]+).*/$1/} {...args} />",
      ");",
      "",
      "export const Default = Template.bind({});",
      "Default.args = {};",
      ""
    ],
    "description": "Creates a simple CSF story template"
  },
  "ReactTest": {
    "prefix": ["react-test", "test"],
    "body": [
      "import { render } from '@testing-library/react';",
      "import ${TM_FILENAME/^([^.]+).*/$1/}, { Props } from './${TM_FILENAME/^([^.]+).*/$1/}';",
      "",
      "describe('${TM_FILENAME/^([^.]+).*/$1/}', () => {",
      "\tconst buildSubject = (props: Props) => {",
      "\t\treturn render(<${TM_FILENAME/^([^.]+).*/$1/} {...props} />);",
      "};",
      "",
      "describe('with minimum props', () => {",
      "\tconst props = {};",
      "",
      "\tit('', () => {",
      "\t\t const { getAllByTestId } = buildSubject(props);",
      "\t\t});",
      "\t});",
      "});",
      ""
    ],
    "description": "Creates a simple RTL test"
  },
  "ExportDefault": {
    "prefix": ["export-d", "ed", "xd"],
    "body": [
      "export { default } from './${TM_DIRECTORY/^.+\\/(.*)$/$1/}';",
      ""
    ],
    "description": "Creates a default export for the component"
  }
}
